#!/usr/bin/expect -f

# Get host IP for QEMU networking
set HOST_IP [exec ip route get 1.1.1.1 | awk {{print $7; exit}}]

puts "Starting Python web server on port 8686..."
exec python3 -m http.server 8686 &
set WEB_SERVER_PID [exec pgrep -f "python3 -m http.server 8686"]

puts "Waiting for web server to start listening on port 8686..."
while {1} {
    set result [catch {exec netstat -tuln | grep ":8686 "} output]
    if {$result == 0 && $output != ""} {
        break
    }
    sleep 0.1
}
puts "Web server is now listening on port 8686"

proc cleanup {} {
    global WEB_SERVER_PID
    puts "Cleaning up..."
    if {$WEB_SERVER_PID != ""} {
        puts "Stopping Python web server (PID: $WEB_SERVER_PID)..."
        catch {exec kill $WEB_SERVER_PID}
    }
}

# Function to download file with error handling
proc download_file {url filename} {
    puts "Attempting to download $filename from $url"
    
    # Try wget
    set wget_result [catch {exec wget -q -O $filename $url} wget_output]
    if {$wget_result == 0} {
        puts "Download completed successfully using wget"
        return 1
    }
    
    puts "wget failed: $wget_output"
    puts "Please install wget or download manually."
    return 0
}

set OPENBSD_VERSION "7.7"
set OPENBSD_PERIOD_STRIPPED [regsub -all {\.} $OPENBSD_VERSION ""]
set ISO_FILE "install$OPENBSD_PERIOD_STRIPPED.iso"

set ARCH [exec uname -m]
if {$ARCH != "x86_64"} {
    puts "Error: This script requires x86_64 architecture. Current architecture: $ARCH"
    exit 1
}

if {![file exists $ISO_FILE]} {
    puts "ISO file not found: $ISO_FILE"
    set download_url "https://cdn.openbsd.org/pub/OpenBSD/$OPENBSD_VERSION/amd64/$ISO_FILE"
    
    if {[download_file $download_url $ISO_FILE]} {
        puts "Download completed: $ISO_FILE"
    } else {
        puts "Failed to download ISO file."
        cleanup
        exit 1
    }
} else {
    puts "ISO file already exists: $ISO_FILE"
}

puts "Creating virtual disk image..."
exec qemu-img create -f qcow2 openbsd-vm.qcow2 5G

puts "Starting QEMU with network access to host IP: $HOST_IP"

spawn qemu-system-x86_64 \
  -m 4096 \
  -smp cpus=2 \
  -nographic \
  -cdrom $ISO_FILE \
  -hda openbsd-vm.qcow2 \
  -boot c

expect "boot>"
send "set tty com0\r"
expect "boot>"
send "boot\r"
expect -timeout 60 "(I)nstall, (U)pgrade, (A)utoinstall or (S)hell?"
send "A\r"
expect "Response file location?"
send "http://10.0.2.2:8686/install.conf\r"
expect -timeout 600 "login: "

# Enter the qemu menu by pressing cntrl+a, then c
# cntrl + a
send "\x01" 
sleep 0.1
send "c"

expect "(qemu)"

# qemu command to shut down the vm
send "system_powerdown\r"

# Wait for the VM to shut down completely
# expect -timeout 60 "qemu-system-x86_64: terminating on signal"

puts "Waiting for vm to stop..."

# Wait for the spawn process to finish
wait

puts "\rFinished"
